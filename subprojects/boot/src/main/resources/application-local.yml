############################################
#### Server
server:
  port: 8080



############################################
#### Spring
spring:
  application:
    name-abbr-env: ${spring.application.name-abbr}-${spring.profiles.active}  # 서비스명 약어 + 실행환경

  #### Auto Configuration
  autoconfigure:
    exclude:
      # Spring Cloud Stream 자동 구성 제외
      - org.springframework.cloud.stream.config.BindingServiceConfiguration
      - org.springframework.cloud.stream.function.FunctionConfiguration

  #### Data Source
  datasource:
    writer:
      jdbc-url: jdbc:postgresql://localhost:5432/postgres
      username: postgres
      password: postgre
      minimum-idle: 5
      maximum-pool-size: 5
    reader:
      jdbc-url: jdbc:postgresql://localhost:5432/postgres
      username: postgres
      password: postgre
      minimum-idle: 5
      maximum-pool-size: 5

  #### JPA
  jpa:
    hibernate:
      ddl-auto: create # FIXME : 반드시 none으로 사용
    properties:
      hibernate:
        format_sql: true

  #### Cache - Redis
  redis:
    host: localhost
    port: 6379

  #### Spring Cloud Stream
  cloud:
    stream:
      bindings:
        ## Inbound 채널 (메시지 수신 설정)
        sample-in:
          # Consumer Group
          group: group.${spring.application.name-env}.YOUR-ID  # TODO : 개발자 아이디를 포함하여 중복 방지
          # Topic
          destination: inbound-topic-${spring.application.name-env}.YOUR-ID  # TODO : 개발자 아이디를 포함하여 중복 방지

        # Outbound 채널 (메시지 발송 설정)
        sample-out:
          destination: outbound-topic-${spring.application.name-env}.YOUR-ID  # TODO : 개발자 아이디를 포함하여 중복 방지

      # Kafka 설정
      kafka:
        binder:
          #brokers: [b-1.msk-dev-iptv-msa.66adcz.c2.kafka.ap-northeast-2.amazonaws.com:9092,b-2.msk-dev-iptv-msa.66adcz.c2.kafka.ap-northeast-2.amazonaws.com:9092,b-3.msk-dev-iptv-msa.66adcz.c2.kafka.ap-northeast-2.amazonaws.com:9092,b-4.msk-dev-iptv-msa.66adcz.c2.kafka.ap-northeast-2.amazonaws.com:9092,b-5.msk-dev-iptv-msa.66adcz.c2.kafka.ap-northeast-2.amazonaws.com:9092,b-6.msk-dev-iptv-msa.66adcz.c2.kafka.ap-northeast-2.amazonaws.com:9092]
          brokers: [ localhost:9094 ]



############################################
#### Logging
logging:
  level:
    com.lguplus.fleta: DEBUG
    #com.zaxxer.hikari: DEBUG
    org.hibernate:
      SQL: DEBUG
      type: TRACE
      type.BasicTypeRegistry: INFO
    org.springframework:
      orm:
        jpa: DEBUG
  pattern:
    level: "%5p [${spring.application.name}][%X{saId:-}][%X{stbMac:-}]"



############################################
#### Other Domain Application Service
service:
  msa-boilerplate:
    url: http://localhost:8080
  subscriber:
    url: http://subscriber.fleta.com
  vodlookup:
    url: http://vodlookup.fleta.com
  programming:
    url: http://programming.fleta.com



############################################
## FeignClient
feign:
  client:
    config:
      default:
        loggerLevel: FULL
