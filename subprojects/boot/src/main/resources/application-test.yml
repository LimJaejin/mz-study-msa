############################################
#### Server
server:
  port: 8080



############################################
####  Spring
spring:
  #### Data Source
  datasource:
    writer:
      jdbc-url: jdbc:postgresql://<<postgres.msa-template.write.host>>:<<postgres.msa-template.write.port>>/<<postgres.msa-template.write.db.mylgdb>>
      username: <<postgres.msa-template.write.username>>
      password: <<postgres.msa-template.write.password>>
      minimum-idle: 10
      maximum-pool-size: 10
    reader:
      jdbc-url: jdbc:postgresql://<<postgres.msa-template.read.host>>:<<postgres.msa-template.read.port>>/<<postgres.msa-template.read.db.mylgdb>>
      username: <<postgres.msa-template.read.username>>
      password: <<postgres.msa-template.read.password>>
      minimum-idle: 20
      maximum-pool-size: 20

  #### JPA
  jpa:
    database: postgresql
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
        format_sql: false
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: false

  ## Cache - Redis
  cache:
    type: none

  ## Message Stream - Kafka
  kafka:
    bootstrap-servers: [<<kafka.msa.plaintext.bootstrapservers>>]



############################################
####  Logging
logging:
  level:
    com.lguplus.fleta: DEBUG
    org.hibernate:
      SQL: DEBUG
#      type: DEBUG
#      type.descriptor.sql: DEBUG



############################################
#### Other Domain Application Service
service:
  vodlookup:
    url: http://vodlookup.fleta.com
  programming:
    url: http://programming.fleta.com



############################################
## FeignClient
feign:
  client:
    config:
      default:
        loggerLevel: BASIC
