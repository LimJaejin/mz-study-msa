############################################
#### Spring
spring:
  #### Data Source
  datasource:
    writer:
      jdbc-url: jdbc:postgresql://<<postgres.msa-template.write.host>>:<<postgres.msa-template.write.port>>,<<postgres.msa-template.read.host>>:<<postgres.msa-template.read.port>>/<<postgres.msa-template.write.db.mylgdb>>?targetServerType=primary&ApplicationName=${spring.application.name}
      username: <<postgres.msa-template.write.username>>
      password: <<postgres.msa-template.write.password>>
      minimum-idle: 5
      maximum-pool-size: 5
    reader:
      jdbc-url: jdbc:postgresql://<<postgres.msa-template.write.host>>:<<postgres.msa-template.write.port>>,<<postgres.msa-template.read.host>>:<<postgres.msa-template.read.port>>/<<postgres.msa-template.write.db.mylgdb>>?targetServerType=preferSecondary&loadBalanceHosts=true&ApplicationName=${spring.application.name}
      username: <<postgres.msa-template.read.username>>
      password: <<postgres.msa-template.read.password>>
      minimum-idle: 5
      maximum-pool-size: 5

  #### Cache - Redis
  cache:
    type: none

  #### Spring Cloud Stream
  cloud:
    stream:
      kafka:
        binder:
          brokers: [<<kafka.msa.plaintext.bootstrapservers>>]



############################################
#### Logging
logging:
  level:
    com.lguplus.fleta: DEBUG
    org.hibernate:
      SQL: DEBUG



############################################
#### Other Domain Application Service
service:
  subscriber:
    url: http://subscriber.fleta.com
  vodlookup:
    url: http://vodlookup.fleta.com
  programming:
    url: http://programming.fleta.com
