############################################
#### Spring
spring:
  application:
    name-env: ${spring.application.name-abbr}-SHD  # 서비스 Prefix (캐시 키 등에 사용)

  #### Open Tracing
  zipkin:
    baseUrl: <<zipkin.host>>

  #### Data Source
  datasource:
    writer:
      jdbc-url: jdbc:postgresql://<<postgres.msa-template.write.host>>:<<postgres.msa-template.write.port>>,<<postgres.msa-template.read.host>>:<<postgres.msa-template.read.port>>/<<postgres.msa-template.write.db.mylgdb>>?targetServerType=primary&ApplicationName=${spring.application.name}
      username: <<postgres.msa-template.write.username>>
      password: <<postgres.msa-template.write.password>>
    reader:
      jdbc-url: jdbc:postgresql://<<postgres.msa-template.write.host>>:<<postgres.msa-template.write.port>>,<<postgres.msa-template.read.host>>:<<postgres.msa-template.read.port>>/<<postgres.msa-template.write.db.mylgdb>>?targetServerType=preferSecondary&loadBalanceHosts=true&ApplicationName=${spring.application.name}
      username: <<postgres.msa-template.read.username>>
      password: <<postgres.msa-template.read.password>>

  ## Cache - Redis
  cache:
    type: redis
  redis:
    cluster:
      nodes: [<<redis.cluster.nodes>>]

  #### Spring Cloud Stream
  cloud:
    stream:
      kafka:
        binder:
          brokers: [<<kafka.msa.plaintext.bootstrapservers>>]
